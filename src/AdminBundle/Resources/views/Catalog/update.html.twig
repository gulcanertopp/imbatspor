{% extends 'AdminBundle:Default:base.html.twig' %}
{% block content %}
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-12">
                <div class="alert alert-success" style="display: none">
                    <strong>Başarıyla  Eklendi</strong>
                </div>

                <div class="alert alert-danger" style="display: none"><strong>Hata Oluştu</strong></div>

                <form id="catalog-add-form" class="login-form button-style" method="post" enctype="multipart/form-data">
                    <input type="hidden" name="id" value="{{ catalog.ID }}">
                    <div class="col-lg-6">
                    <div class="form-group">
                        <label>Ürün Kodu:</label>
                        <input data-validation="required" value="{{ catalog.CatalogName }}"  data-validation-error-msg="Boş Olamaz" name="catalog_code" type="text"class="form-control"  />
                    </div>

                    </div>

                    <div class="form-group">
                        <label>Resim:</label>
                        <input type="hidden" id="img_url" value="{{ catalog.ImgUrl }}">
                    </div>
                        <div class="form-group">
                            <label>Pdf:</label>
                            <input type="hidden" id="img_url" value="{{ catalog.PdfUrl }}">
                        </div>
                    <button type="submit" style="float: right" class="btn btn-primary">Güncelle</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}
   {% block javascripts %}
       <script type="text/javascript" src="{{ asset('static/js/uploadImage.js') }}" ></script>
       <script>
           var catalogs=[];
           var Forms={
               Add:{
                   Self:$('#catalog-add-form'),
                   Fields:{
                       id:$('#catalog-add-form input[name ="id"]'),

                       catalog_name:$('#catalog-add-form input[name ="catalog_name"]'),
                       img_url:$('#img_url').val(),
                       pdf_url:$('#pdf_url').val(),
                       catalogs: catalog
                   },
                   Values          : function(){
                       return {

                           id:Forms.Add.Fields.id.val(),
                           catalog_name:Forms.Add.Fields.catalog_name.val(),
                           img_url:$('#img_url').val(),
                           pdf_url:$('#pdf_url').val(),
                           catalogs: catalogs
                       };
                   },
                   Bind:function () {
                       Forms.Add.Self.on('submit',function (e) {
                           e.preventDefault();
                           $.post('{{ url('ajax_catalog_update') }}',Forms.Add.Values(),function (result) {
                               if(result.success)
                               {
                                   setTimeout(function () {
                                    location.reload();
                                   },2000);
                                   $('.alert-success').slideDown();
                               }else {
                                   $('.alert-danger').slideDown();
                               }
                           })
                       })
                   }
               },

               Bind:function () {
                   Forms.Add.Bind();
               }
           }
           $('#main-cat').on('change', function (e) {
               categories = [];
               var optionSelected = $("option:selected", this);
               var valueSelected = this.value;
               $.post('{{ url('admin_ajax_sub_category_get') }}',{ parent: valueSelected },function (result) {
                   if(result.categories)
                   {
                       var option = "";
                       var id =$('#sub-cat').data('id');
                       $.each( result.categories, function( key, value ) {
                           option +=  '<option value="'+value.ID+'">'+value.CategoryName+'</option>';
                       });

                       $('#sub-cat').html(option);


                   }
                   categories.push({
                       'id':valueSelected,
                       'category_name':'null',
                       'description':'null',
                       'parent':'null'
                   },{
                       'id':$("#sub-cat option:selected").val(),
                       'category_name':'null',
                       'description':'null',
                       'parent':'null'
                   })
               })


           });

           $('#sub-cat').on('change', function (e) {
               categories = [];
               var optionSelected = $("option:selected", this);
               var valueSelected = this.value;
               categories.push({
                   'id':$("#main-cat option:selected").val(),
                   'category_name':'null',
                   'description':'null',
                   'parent':'null'
               },{
                   'id':valueSelected,
                   'category_name':'null',
                   'description':'null',
                   'parent':'null'
               })

           });

               $('#img_url').uploadableImage({
                   url         : '{{ path('admin_media_save_easy') }}',
                   description : ' ',
                   errors      : {
                       limitMultiFileUploads : 'blog'
                   },
                   s : 0.20
               });

               $.validate({
                   validateOnBlur : false,
                   errorMessagePosition : 'top',
                   scrollToTopOnError : false
               });
               Forms.Bind();

           });


       </script>
   {% endblock %}